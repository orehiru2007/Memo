rafter.ddo.jp CentOS release 7.0 (Oracle VirtualBox)

Postfix & TIPS

1. Postfix インストール

   1. rpmbuild 用アカウント作成

      # adduser masuda
      # passwd masuda
   
   2. デフォルト Postfix のアンインストール / 必要パッケージのインストール

      # rpm -e --nodeps postfix
      # yum -y install kernel-devel rpm-build redhat-rpm-config
      # yum -y install db4-devel openldap-devel zlib-devel 
      # yum -y install mysql mysql-devel cyrus-sasl-devel openssl-devel libdb-devel ed 
   
   3. rpmbuild 環境の準備

      # su - masuda
      $ mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
      $ echo '%_topdir %{getenv:HOME}/rpmbuild' > ~/.rpmmacros

   4. src.rpm のインストール

      $ cd ~/rpmbuild/SRPMS
      $ wget http://vault.centos.org/7.2.1511/os/Source/SPackages/postfix-2.10.1-6.el7.src.rpm
      $ rpm -ivh postfix-2.10.1-6.el7.src.rpm
   
   5. vda 用パッチの適用

      $ cd ~/rpmbuild/SOURCES/
      #$ mv postfix-2.5.4-vda-ng.patch.gz postfix-2.5.4-vda-ng.patch.gz.bak
      $ wget http://vda.sourceforge.net/VDA/postfix-vda-v13-2.10.0.patch
      $ mv postfix-vda-v13-2.10.0.patch postfix-2.5.4-vda-ng.patch
      $ gzip postfix-2.5.4-vda-ng.patch
   
   6. sleep patch の適用

      $ tar zxvf postfix-2.10.1.tar.gz
      $ cd postfix-2.10.1
      $ wget http://k2net.hakuba.jp/pub/postfix-2.9-sleep.patch
      $ patch -p0 < postfix-2.9-sleep.patch
      $ cd ..
      $ rm -rf postfix-2.10.1.tar.gz
      $ tar czvf postfix-2.10.1.tar.gz postfix-2.10.1
  
  7. rpmbuild 

      $ cd
      $ export POSTFIX_MYSQL_REDHAT=1
      $ export POSTFIX_VDA=1
      $ export POSTFIX_TLS=1
      $ export POSTFIX_SASL=2
      $ export POSTFIX_LDAP=1
      $ sh ~/rpmbuild/SOURCES/make-postfix.spec
      $ rpmbuild -bb ~/rpmbuild/SPECS/postfix.spec

      $ exit

   8. インストール

      # rpm -Uvh /home/masuda/rpmbuild/RPMS/x86_64/postfix-2.10.1-6.el7.centos.x86_64.rpm
      # systemctl enable postfix
      # systemctl start postfix

2. ログ設定

   1. cronie-noanacron のインストール

      # yum -y install cronie-noanacron
   
   2. cronie-anacronのアンインストール (インストールされている場合)

      # yum -y remove cronie-anacron

   3. /etc/cron.d/dailyjobs

      # Run the daily, weekly, and monthly jobs if cronie-anacron is not installed
      SHELL=/bin/bash
      PATH=/sbin:/bin:/usr/sbin:/usr/bin
      MAILTO=root
      
      # run-parts
      50 23 * * * root [ ! -f /etc/cron.hourly/0anacron ] && run-parts /etc/cron.daily
      01 0 * * 0 root [ ! -f /etc/cron.hourly/0anacron ] && run-parts /etc/cron.weekly
      01 0 1 * * root [ ! -f /etc/cron.hourly/0anacron ] && run-parts /etc/cron.monthly
   
   4. /etc/logrotate.conf

      # diff -U1 /etc/logrotate.conf{.orig,}
      --- /etc/logrotate.conf.orig    2014-03-27 10:47:33.443601717 +0900
      +++ /etc/logrotate.conf 2014-03-27 10:47:28.330587917 +0900
      @@ -11,3 +11,3 @@
       # use date as a suffix of the rotated file
      -dateext
      +nodateext

   5. /etc/rsyslog.conf

      # cat /etc/rsyslog.conf | egrep -v "(^#|^$)"
      $ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
      $ModLoad imjournal # provides access to the systemd journal
      $imjournalRatelimitInterval 0
      $ModLoad imudp
      $UDPServerRun 514
      $ModLoad imtcp
      $InputTCPServerRun 514
      $WorkDirectory /var/lib/rsyslog
      $ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
      $IncludeConfig /etc/rsyslog.d/*.conf
      $OmitLocalLogging on
      $IMJournalStateFile imjournal.state
      mail.*                                                  -/var/log/maillog
      &~
      local3.*                                                -/var/log/dovecot.log
      &~
      local4.*                                                -/var/log/dovecot_deliver.log
      &~
      local5.*                                                -/var/log/maillog_deux
      &~
      local6.*                                                -/var/log/maillog_trois
      &~
      cron.*                                                  /var/log/cron
      &~
      local7.*                                                /var/log/boot.log
      &~
      authpriv.*                                              -/var/log/secure
      &~
      uucp,news.crit                                          /var/log/spooler
      &~
      :msg,contains,"iptables DROP"                           -/var/log/iptables.log
      &~
      :fromhost-ip, isequal, "127.0.0.1"                      /var/log/messages
      &~

   6. /etc/logrotate.d/syslog (重要箇所のみ)
      
      /var/log/maillog
      /var/log/maillog_deux
      /var/log/messages
      {
          daily
          rotate 180
          sharedscripts
          postrotate
              /bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true
          endscript
      }

3. Postfix + Dovecot (SMTP-Auth) +  TLS

   1. /etc/postfix/master.cf (重要箇所のみ抜粋)

      # diff -u /etc/postfix/master.cf{.orig,}
      --- /etc/postfix/master.cf.orig 2013-08-20 22:36:59.372187580 +0900
      +++ /etc/postfix/master.cf      2013-08-27 21:35:31.524259733 +0900
      @@ -125,3 +125,5 @@
       #mailman   unix  -       n       n       -       -       pipe
       #  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py
       #  ${nexthop} ${user}
      +dovecot    unix  -       n       n       -       -       pipe
      +   flags=DRhu user=dovecot:dovecot argv=/usr/libexec/dovecot/dovecot-lda -d ${recipient}

   2. /etc/postfix/main.cf (重要箇所のみ)

      ## SMTP Auth Dovecot
      smtpd_tls_auth_only = yes
      broken_sasl_auth_clients = yes
      smtpd_sasl_auth_enable = yes
      smtpd_sasl_authenticated_header = no
      smtpd_sasl_security_options = noanonymous
      smtpd_sasl_type = dovecot
      smtpd_sasl_path = private/auth
      smtpd_sasl_local_domain = $myhostname

      ## Dovecot LDA
      #mailbox_command = /usr/libexec/dovecot/dovecot-lda
      #dovecot_destination_concurrency_limit = 1

4. TIPS

   1. /etc/postfix/master.cf

      submission inet n       -       n       -       -       smtpd
        -o syslog_name=postfix/submission                                  : syslog レコードのプロセス名の前に付けられるメールシステムの名前 / submission
        -o smtpd_tls_security_level=encrypt                                : SMTP TLS セキュリティレベル / encrypt (TLS 暗号化強制)
        -o smtpd_sasl_auth_enable=yes                                      : SASL 認証 / yes (有効)
        -o smtpd_reject_unlisted_recipient=yes                             : 不明な送信先アドレスへの配送拒否 / yes (拒否する)
      #  -o smtpd_client_restrictions=$mua_client_restrictions             : 詳細不明
      #  -o smtpd_helo_restrictions=$mua_helo_restrictions                 : 詳細不明
      #  -o smtpd_sender_restrictions=$mua_sender_restrictions             : 詳細不明
        -o smtpd_recipient_restrictions=permit_sasl_authenticated,reject   : RCPT TO コマンドに適用されるアクセス制限 / permit_sasl_authenticated,reject
      #  -o milter_macro_daemon_name=ORIGINATING                           : 詳細不明 (Postfix 2.3 から Milter が利用可能のため、その関連)
      smtps     inet  n       -       n       -       -       smtpd
        -o syslog_name=postfix/smtps                                       : syslog レコードのプロセス名の前に付けられるメールシステムの名前 / smtps
        -o smtpd_tls_wrappermode=yes                                       : サーバが常に TLS を使う、非標準 "ラッパー" モードの指定 / yes (有効)
        -o smtpd_sasl_auth_enable=yes                                      : SASL 認証 / yes (有効)
        -o smtpd_reject_unlisted_recipient=yes                             : 不明な送信先アドレスへの配送拒否 / yes (拒否する)
      #  -o smtpd_client_restrictions=$mua_client_restrictions             : 詳細不明
      #  -o smtpd_helo_restrictions=$mua_helo_restrictions                 : 詳細不明
      #  -o smtpd_sender_restrictions=$mua_sender_restrictions             : 詳細不明
        -o smtpd_recipient_restrictions=permit_sasl_authenticated,reject   : RCPT TO コマンドに適用されるアクセス制限 / permit_sasl_authenticated,reject
      # -o milter_macro_daemon_name=ORIGINATING                            : 詳細不明 (Postfix 2.3 から Milter が利用可能のため、その関連)

   2. Postfix リソースチューニング

      パラメータ名                        | デフォルト値                 | チューニング後 | 補足
      ------------------------------------+------------------------------+----------------+----------------------------------------------
      anvil_rate_time_unit                | 60s                          | 60s            | 単位時間
      smtpd_recipient_limit               | 1000                         | 1000           | 配送処理毎の 送信先アドレスの最大
      smtpd_timeout                       | ${stress?10}${stress:300}s   | 300s           | SMTP クライアントからの要求を受け取るまでの 待機時間
      smtpd_client_connection_count_limit | 50                           | 50             | 単一の SMTP クライアントからの 同時最大接続数
      smtpd_client_message_rate_limit     | 0                            | 120            | 単位時間における  単一の SMTP クライアントからの配送要求数の最大
      smtpd_client_recipient_rate_limit   | 0                            |                | 単位時間における  単一の SMTP クライアントからの送信先アドレスの最大
      smtpd_client_connection_rate_limit  | 0                            |                | 単位時間における  単一の SMTP クライアントからの接続試行回数の最大
      smtpd_client_event_limit_exceptions | $mynetworks                  | $mynetworks    | 接続カウントや接続速度、SMTP 要求速度の制限から除外されるクライアント

   3. stress パラメータについて

      Postfix 2.5 以降でサポートされた、過負荷に対する機能
      プロセス数の上限 (default_process_limit) に達した場合に、各パラメータの値を変更することが可能

      # ps -ef | grep smtpd | grep -v grep
      postfix   8689  8683  0 19:37 ?        00:00:00 smtpd -n smtp -t inet -u -o stress=
      postfix   8698  8683  0 19:37 ?        00:00:00 smtpd -n smtp -t inet -u -o stress=
      postfix   8711  8683  0 19:37 ?        00:00:00 smtpd -n smtp -t inet -u -o stress=yes       ← 上限値に達した場合 "yes" が付与される

      パラメータ名                        | デフォルト値                 | 補足
      ------------------------------------+------------------------------+------------------------------------------------
      address_verify_poll_count           | ${stress?1}${stress:3}       | 送信先アドレス検証 verify に問い合わせる回数
      postscreen_command_time_limit       | ${stress?10}${stress:300}s   | postscreen 機能利用時に SMTP クライアントからの要求を受け取るまでの 待機時間
      postscreen_greet_wait               | ${stress?2}${stress:6}s      | postscreen 機能利用時に Greeting Mesaage を出すまで時間
      smtpd_hard_error_limit              | ${stress?1}${stress:20}      | SMTP クライアントのエラー (メール配送失敗に至らないもの) 数の最大
      smtpd_junk_command_limit            | ${stress?1}${stress:100}     | SMTP クライアントが実行できるジャンクコマンド (NOOP、VRFY、ETRN、RET 等) 数の最大
      smtpd_per_record_deadline           | ${stress?yes}${stress:no}    | yes の場合、各処理が途中であっても smtpd_timeout の値を超えた場合、接続を切断する
      smtpd_starttls_timeout              | ${stress?10}${stress:300}s   | SMTP クライアントからの要求を受け取るまでの 待機時間 (STARTTLS 以降)
      smtpd_timeout                       | ${stress?10}${stress:300}s   | SMTP クライアントからの要求を受け取るまでの 待機時間

   4. Postscreen

      Postfix 2.8 以降でサポートされた簡単な Tarpitting 機能
      S25R + taRgrey を使うので、覚える必要はないが、Postfix 自体の進化は評価できるかも
     
      1. /etc/postfix/main.cf (抜粋)

         ## Postscreen
         postscreen_access_list = permit_mynetworks,
                                  hash:/etc/postfix/postscreen_access
         postscreen_blacklist_action= drop
         postscreen_greet_action = enforce
         postscreen_greet_wait = ${stress?2}${stress:31}s
         #postscreen_dnsbl_sites = all.rbl.jp=127.0.0.[2;4],
         #                        zen.spamhaus.org=127.0.0.[2..7;10;11]
         #postscreen_dnsbl_action = enforce

      2. /etc/postfix/postscreen_access

         #
         127.0.0.1               permit
         #
         192.168.1.0/24          reject

      3. /etc/postfix/master.cf (抜粋)

         ## Postscreen
         #smtp      inet  n       -       n       -       -       smtpd
         smtp      inet  n       -       n       -     1     postscreen
         smtpd     pass  -       -       n       -     -     smtpd
         dnsblog   unix  -       -       n       -     0     dnsblog
         tlsproxy  unix  -       -       n       -     0     tlsproxy

   5. インスタンスを複数起動

      参考 URL (過去のやり方) : Stray Penguin http://www.asahi-net.or.jp/~aa4t-nngk/postfix-tips.html

      1. 初期化
        
        # postmulti -e init

         /etc/postfix/main.cf に以下の行が追加される
         multi_instance_wrapper = ${command_directory}/postmulti -p --
         multi_instance_enable = yes

      2. mta グループに属する postfix-deux という名前のインスタンスを作成する

         # postmulti -I postfix-deux -G mta -e create
         
         /etc/postfix/main.cf に以下の行が追加される
         multi_instance_directories = /etc/postfix-deux

      3. /etc/postfix-deux/main.cf 重要箇所のみ抜粋

         ## Dovecot LDA
         mailbox_command = /usr/libexec/dovecot/dovecot-lda
         #dovecot_destination_concurrency_limit = 1
         
         ## Alias
         alias_database = hash:/etc/postfix-deux/aliases
         alias_maps = hash:/etc/postfix-deux/aliases
         
         ## Postfix-Multi
         #master_service_disable = inet
         master_service_disable =
         authorized_submit_users =
         multi_instance_group = mta
         multi_instance_name = postfix-deux
         syslog_facility = local5
         multi_instance_enable = yes
 
      4. /etc/postfix-deux/master.cf 重要箇所のみ抜粋
 
         #smtp      inet  n       -       n       -       -       smtpd
         10025      inet  n       -       n       -       -       smtpd
 
      5. インスタンス Postfix-deux の起動
 
         # postmulti -i postfix-deux -e enable
         # postmulti -i postfix-deux -p start
 
      6. コマンド 例
 
         newaliases : postmulti -i postfix-deux -x newaliases
         postmap    : postmulti -i postfix-deux -x postmap
         mailq      : postmulti -i postfix-deux -x mailq

      7. /etc/rsyslog.conf 重要箇所のみ抜粋

         mail.*                                                 -/var/log/maillog
         &~
         local5.*                                               -/var/log/maillog_deux
         &~

      8. /etc/logrotate.d/syslog 重要箇所のみ抜粋

         /var/log/maillog
         /var/log/maillog_deux
         /var/log/messages
         {
             daily
             rotate 180
             sharedscripts
             postrotate
                 /bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true
             endscript
         }

   6. サーバサイド 暗号制御

      パラメータ名                        | 値                           | 補足
      ------------------------------------+------------------------------+-----------------------------------------------------------------------------------------
      smtpd_enforce_tls                   | no                           | クライアントに対する STARTTLS を通知し、利用を強制する (no = 強制しない)
      smtpd_tls_loglevel                  | 2                            | ログレベル 0 TLS 動作に関するログ記録を無効にします
                                          |                              |            1 TLS ハンドシェイクと証明書の情報をログに記録します
                                          |                              |            2 TLS ネゴシエーションの間のレベルをログに記録します
                                          |                              |            3 TLS ネゴシエーションプロセスの 16進数および ASCII ダンプを ログに記録します
                                          |                              |            4 STARTTLS 以降の通信の 16進数および ASCII ダンプを完全に ログに記録します
      smtpd_tls_protocols                 | TLSv1, !SSLv2, !SSLv3        | 危殆化の進んでいる SSLv2， SSLv3 は利用を禁止する
      smtpd_tls_exclude_ciphers           | aNULL, MD5, DES, MEDIUM, LOW | 全ての STARTTLS 処理において、除外する暗号スイート
      smtpd_tls_mandatory_ciphers         | high                         | STARTTLS を強制された場合に、利用する最低限の 暗号スイート
      smtpd_tls_mandatory_exclude_ciphers | aNULL, MD5, DES, MEDIUM, LOW | STARTTLS を強制された場合に、除外する暗号スイート

      以下、デフォルト値
      tls_export_cipherlist               | aNULL:-aNULL:ALL:+RC4:@STRENGTH
      tls_high_cipherlist                 | aNULL:-aNULL:ALL:!EXPORT:!LOW:!MEDIUM:+RC4:@STRENGTH
      tls_low_cipherlist                  | aNULL:-aNULL:ALL:!EXPORT:+RC4:@STRENGTH
      tls_medium_cipherlist               | aNULL:-aNULL:ALL:!EXPORT:!LOW:+RC4:@STRENGTH
      tls_null_cipherlist                 | eNULL:!aNULL

5. 参考 URL

   http://www.postfix-jp.info/trans-2.3/jhtml/OVERVIEW.html



