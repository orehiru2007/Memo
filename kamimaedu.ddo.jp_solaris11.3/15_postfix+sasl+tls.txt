kamimaedu.ddo.jp (VMware + Oracle Solaris 11.2 x86) 

Postfix + Cyrus-sasl2 + TLS

cyrus-sasl2

1. インストール

   1. /usr/include/unistd.h の編集

      # diff -U1 /usr/include/unistd.h{.orig,}
      --- /usr/include/unistd.h.orig  2016-01-22 17:35:32.620803747 +0900
      +++ /usr/include/unistd.h       2016-01-22 17:36:11.116829588 +0900
      @@ -328,3 +328,3 @@
       #if defined(_XPG4_2)
      -extern int gethostname(char *, size_t);
      +extern int gethostname(char *, unsigned size_t);
       #elif !defined(__XOPEN_OR_POSIX) || defined(__EXTENSIONS__)
      @@ -333,3 +333,3 @@
       #else
      -extern int gethostname(char *, size_t);
      +extern int gethostname(char *, unsigned size_t);
       #endif

   2. インストール

      # wget ftp://ftp.andrew.cmu.edu/pub/cyrus-mail/cyrus-sasl-2.1.25.tar.gz
      # tar zxvf cyrus-sasl-2.1.25.tar.gz
      # cd cyrus-sasl-2.1.25
      # patch -p1 <../cyrus-sasl-20120821_1.path
      # patch -p1 <../cyrus-sasl-20120821_2.path
      # patch -p1 <../cyrus-sasl-20120821_3.path
      # CFLAGS=-m64 \
      > CPPFLAGS=-I/usr/local/64/include/ \
      > ./configure \
      > --prefix=/usr/local/64 \
      > --with-plugindir=/usr/local/64/lib/sasl2 \
      > --with-openssl=/usr/local/64 \
      > --with-dbd-libdir=/usr/local/64/lib \
      > --with-saslauthd=/var/run/saslauthd \
      > --enable-cram \
      > --enable-login \
      > --disable-gssapi \
      > --build=x86_64-pc-solaris2.11
      # make
      # sudo make install

   3. パッチ内容

      3.1. cyrus-sasl-20120821_1.path
# diff -urN cyrus-sasl-2.1.25.orig/lib/saslutil.c cyrus-sasl-2.1.25/lib/saslutil.c
--- cyrus-sasl-2.1.25.orig/lib/saslutil.c       2010-12-01 23:52:53.000000000 +0900
+++ cyrus-sasl-2.1.25/lib/saslutil.c    2014-10-03 10:26:31.355455606 +0900
@@ -82,7 +82,7 @@

 #ifdef sun
 /* gotta define gethostname ourselves on suns */
-extern int gethostname(char *, int);
+extern int gethostname(char *, unsigned int);
 #endif

 char *encode_table;

      3.2. cyrus-sasl-20120821_2.path
# diff -urN cyrus-sasl-2.1.25.orig/sasldb/db_berkeley.c cyrus-sasl-2.1.25/sasldb/db_berkeley.c
--- cyrus-sasl-2.1.25.orig/sasldb/db_berkeley.c 2011-09-02 21:58:02.000000000 +0900
+++ cyrus-sasl-2.1.25/sasldb/db_berkeley.c      2014-10-03 10:28:04.337399719 +0900
@@ -101,7 +101,7 @@
     ret = db_create(mbdb, NULL, 0);
     if (ret == 0 && *mbdb != NULL)
     {
-#if DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 1
+#if (DB_VERSION_MAJOR > 4) || ((DB_VERSION_MAJOR == 4) && (DB_VERSION_MINOR >= 1))
        ret = (*mbdb)->open(*mbdb, NULL, path, NULL, DB_HASH, flags, 0660);
 #else
        ret = (*mbdb)->open(*mbdb, path, NULL, DB_HASH, flags, 0660);

      3.3. cyrus-sasl-20120821_3.path
# diff -urN cyrus-sasl-2.1.25.orig/utils/dbconverter-2.c cyrus-sasl-2.1.25/utils/dbconverter-2.c
--- cyrus-sasl-2.1.25.orig/utils/dbconverter-2.c        2003-02-14 04:56:17.000000000 +0900
+++ cyrus-sasl-2.1.25/utils/dbconverter-2.c     2014-10-03 10:28:50.770025933 +0900
@@ -214,7 +214,7 @@
     ret = db_create(mbdb, NULL, 0);
     if (ret == 0 && *mbdb != NULL)
     {
-#if DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 1
+#if (DB_VERSION_MAJOR > 4) || ((DB_VERSION_MAJOR == 4) && (DB_VERSION_MINOR >= 1))
        ret = (*mbdb)->open(*mbdb, NULL, path, NULL, DB_HASH, DB_CREATE, 0664);
 #else
        ret = (*mbdb)->open(*mbdb, path, NULL, DB_HASH, DB_CREATE, 0664);

2. SMTP 認証の設定 (PAM 経由でシステムパスワード認証)
   # cat /usr/local/64/lib/sasl2/smtpd.conf
   pwcheck_method: saslauthd
   mech_list: PLAIN LOGIN

3. /etc/init.d/saslauthd 起動スクリプト
   #!/bin/sh
   
   PIDFILE=/var/run/saslauthd/saslauthd.pid
   
   case "$1" in
   'start')
           if [ ! -d /var/run/saslsuthd ]; then
                   mkdir -p /var/run/saslauthd
           fi
           if [ -f $PIDFILE ]; then
                   echo 'Cyrus Sasl authdaemon has Started'
           else
                   /usr/local/64/sbin/saslauthd -a pam > /dev/null
                   echo 'Start Cyrus Sasl authdaemon'
           fi
           ;;
   
   'stop')
           kill -TERM `/bin/cat /var/run/saslauthd/saslauthd.pid` > /dev/null
           echo 'Stop Cyrus Sasl authdaemon'
           ;;
   
   'restart')
           $0 stop
           sleep 2
           $0 start
           ;;
   
   *)
           echo "Usage: $0 { start | stop | restart }"
           exit 1
           ;;
   esac
   exit 0

4. リンクの作成
   # chmod 755 /etc/init.d/saslauthd
   # ln /etc/init.d/saslauthd /etc/rc0.d/K36saslauthd
   # ln /etc/init.d/saslauthd /etc/rc1.d/K36saslauthd
   # ln /etc/init.d/saslauthd /etc/rcS.d/K36saslauthd
   # ln /etc/init.d/saslauthd /etc/rc2.d/S88saslauthd

Postfix

1. sendmail の停止
   # svcadm disable sendmail
   # svcs -x sendmail
   svc:/network/smtp:sendmail (sendmail SMTP mail transfer agent)
    State: disabled since 2014年10月03日 10時40分47秒
   Reason: Disabled by an administrator.
      See: http://support.oracle.com/msg/SMF-8000-05
      See: sendmail(1M)
      See: /var/svc/log/network-smtp:sendmail.log
   Impact: This service is not running.

2. zlib 64bit (インストール済)
   # wget http://zlib.net/zlib-1.2.8.tar.gz
   # tar zxvf zlib-1.2.8.tar.gz
   # cd zlib-1.2.8
   # CFLAGS=-m64 ./configure --prefix=/usr/local/64
   # LD_RUN_PATH=/usr/local/64/lib make
   # make install
   # CFLAGS=-m64 ./configure --shared --prefix=/usr/local/64
   # LD_RUN_PATH=/usr/local/64/lib make
   # make install

3. PCRE 64bit
   # wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.gz
   # tar zxvf pcre-8.36.tar.gz
   # cd pcre-8.36
   # CFLAGS="-m64 -g" \
   > CXXFLAGS="-m64 -g" \
   > LDFLAGS="-L/usr/local/gcc4/lib/amd64/ -L/usr/local/64/lib/" \
   > ./configure --prefix=/usr/local/64 --enable-utf8 --enable-pcregrep-libz
   # make
   # make install

3. postfix のインストール

   1. postfix-2.10.0-20130620_1.patch
      diff -urN postfix-2.10.1.orig/src/util/sys_defs.h postfix-2.10.1/src/util/sys_defs.h
      --- postfix-2.10.1.orig/src/util/sys_defs.h     2012-09-25 08:53:56.000000000 +0900
      +++ postfix-2.10.1/src/util/sys_defs.h  2013-08-27 22:04:01.564973045 +0900
      @@ -420,7 +420,6 @@
       #define ALIAS_DB_MAP   "dbm:/etc/mail/aliases"
       #ifndef NO_NIS
       #define HAS_NIS
      -#define HAS_NISPLUS
       #endif
       #define USE_SYS_SOCKIO_H               /* Solaris 2.5, changed sys/ioctl.h */
       #define GETTIMEOFDAY(t)        gettimeofday(t)

   2. インストール
      # groupadd -g 68 postfix
      # groupadd -g 69 postdrop
      # useradd -u 68 -g 68 -d /etc/postfix postfix
      # wget http://mirror.postfix.jp/postfix-release/official/postfix-2.10.1.tar.gz
      # tar zxvf postfix-2.10.1.tar.gz
      # cd postfix-2.10.1
      # patch -p1 <../postfix-2.10.1-20130827_1.patch
      # make tidy
      # make makefiles \
      > OPT='-m64 -O3 -pipe -s -march=native -mtune=native' \
      > DEBUG='' \
      > CCARGS='-DDEF_COMMAND_DIR=\"/var/postfix/sbin\" \
      > -DDEF_CONFIG_DIR=\"/usr/local/64/etc/postfix\" \
      > -DDEF_COMMAND_DIR=\"/usr/local/64/sbin\" \
      > -DDEF_DAEMON_DIR=\"/usr/local/64/libexec/postfix\" \
      > -DDEF_DATA_DIR=\"/var/lib/postfix\" \
      > -DDEF_MAILQ_PATH=\"/usr/local/64/bin/mailq\" \
      > -DDEF_MANPAGE_DIR=\"/usr/local/man\" \
      > -DDEF_NEWALIAS_PATH=\"/usr/local/64/bin/newaliases\" \
      > -DDEF_QUEUE_DIR=\"/var/spool/postfix\" \
      > -DDEF_SENDMAIL_PATH=\"/usr/local/64/sbin/sendmail\" \
      > -DUSE_TLS -DUSE_SASL_AUTH -DUSE_CYRUS_SASL -DHAS_DB -DHAS_PCRE -DDEF_SERVER_SASL_TYPE=\"dovecot\" \
      > -I/usr/local/64/include/openssl/ -I/usr/local/64/include/sasl -I/usr/local/64/include' \
      > AUXLIBS="-L/usr/local/64/lib -R/usr/local/64/lib -lssl -lcrypto -lz -lm -lsasl2 -ldb -lpcre"
      # make

      # make install
      install_root:       /
      tempdir:            /usr/local/src/64/postfix/2.10.1/postfix-2.10.1.
      config_directory:   /usr/local/64/etc/postfix
      command_directory:  /usr/local/64/sbin
      daemon_directory:   /usr/local/64/libexec/postfix
      data_directory:     /var/lib/postfix
      html_directory:     no
      mail_owner:         postfix
      mailq_path:         /usr/local/64/bin/mailq
      manpage_directory:  /usr/local/man
      newaliases_path:    /usr/local/64/bin/newaliases
      queue_directory:    /var/spool/postfix
      readme_directory:   no
      sendmail_path:      /usr/local/64/sbin/sendmail
      setgid_group:       postdrop

   2. インストール

4. 起動スクリプト
   # cat /etc/init.d/postfix
   #!/bin/sh
   
   [ -x /usr/local/64/sbin/postfix ] || echo "Postfix not found."
   
   /usr/local/64/sbin/postfix "$@"

5. 起動スクリプトのリンクの作成

   # chmod 755 /etc/init.d/postfix
   # ln /etc/init.d/postfix /etc/rc0.d/K36postfix
   # ln /etc/init.d/postfix /etc/rc1.d/K36postfix
   # ln /etc/init.d/postfix /etc/rcS.d/K36postfix
   # ln /etc/init.d/postfix /etc/rc2.d/S88postfix

6. /etc/postfix/master.cf

   # postconf -n

7. maildirsize の作成

   # sudo -u tawatari /usr/lib/courier-imap/bin/maildirmake -q 10000000S /home/tawatari/Maildir

8. TIPS

   1. /etc/services の編集

      # diff -U1 /etc/services{.orig,}
      --- /etc/services.orig  2013-06-25 11:31:02.568626704 +0900
      +++ /etc/services       2013-06-25 11:31:29.520765291 +0900
      @@ -40,2 +40,3 @@
       ldap           389/udp                         # Lightweight Directory Access Protocol
      +smtps          465/tcp                         # SMTP over SSL (TLS)
       dhcpv6-client  546/udp         dhcpv6c         # DHCPv6 Client (RFC 3315)

   2. /etc/postfix/master.cf

      submission inet n       -       n       -       -       smtpd
        -o syslog_name=postfix/submission                                  : syslog レコードのプロセス名の前に付けられるメールシステムの名前 / submission
        -o smtpd_tls_security_level=encrypt                                : SMTP TLS セキュリティレベル / encrypt (TLS 暗号化強制)
        -o smtpd_sasl_auth_enable=yes                                      : SASL 認証 / yes (有効)
        -o smtpd_reject_unlisted_recipient=yes                             : 不明な送信先アドレスへの配送拒否 / yes (拒否する)
      #  -o smtpd_client_restrictions=$mua_client_restrictions             : 詳細不明
      #  -o smtpd_helo_restrictions=$mua_helo_restrictions                 : 詳細不明
      #  -o smtpd_sender_restrictions=$mua_sender_restrictions             : 詳細不明
        -o smtpd_recipient_restrictions=permit_sasl_authenticated,reject   : RCPT TO コマンドに適用されるアクセス制限 / permit_sasl_authenticated,reject
      #  -o milter_macro_daemon_name=ORIGINATING                           : 詳細不明 (Postfix 2.3 から Milter が利用可能のため、その関連)
      smtps     inet  n       -       n       -       -       smtpd
        -o syslog_name=postfix/smtps                                       : syslog レコードのプロセス名の前に付けられるメールシステムの名前 / smtps
        -o smtpd_tls_wrappermode=yes                                       : サーバが常に TLS を使う、非標準 "ラッパー" モードの指定 / yes (有効)
        -o smtpd_sasl_auth_enable=yes                                      : SASL 認証 / yes (有効)
        -o smtpd_reject_unlisted_recipient=yes                             : 不明な送信先アドレスへの配送拒否 / yes (拒否する)
      #  -o smtpd_client_restrictions=$mua_client_restrictions             : 詳細不明
      #  -o smtpd_helo_restrictions=$mua_helo_restrictions                 : 詳細不明
      #  -o smtpd_sender_restrictions=$mua_sender_restrictions             : 詳細不明
        -o smtpd_recipient_restrictions=permit_sasl_authenticated,reject   : RCPT TO コマンドに適用されるアクセス制限 / permit_sasl_authenticated,reject
        -o milter_macro_daemon_name=ORIGINATING                            : 詳細不明 (Postfix 2.3 から Milter が利用可能のため、その関連)

  3. Postfix リソースチューニング

     パラメータ名                        | デフォルト値               | チューニング後 | 補足
     ------------------------------------+----------------------------+----------------+----------------------------------------------
     anvil_rate_time_unit                | 60s                        | 60s            | 単位時間
     default_process_limit               | 100                        | 300            | 子プロセスの 最大数
     smtpd_recipient_limit               | 1000                       | 1000           | 配送処理毎の 送信先アドレスの最大
     smtpd_timeout                       | ${stress?10}${stress:300}s | 300s           | SMTP クライアントからの要求を受け取るまでの 待機時間
     smtpd_client_connection_count_limit | 50                         | 50             | 単一の SMTP クライアントからの 同時最大接続数
     smtpd_client_message_rate_limit     | 0                          | 120            | 単位時間における  単一の SMTP クライアントからの配送要求数の最大
     smtpd_client_recipient_rate_limit   | 0                          |                | 単位時間における  単一の SMTP クライアントからの送信先アドレスの最大
     smtpd_client_connection_rate_limit  | 0                          |                | 単位時間における  単一の SMTP クライアントからの接続試行回数の最大
     smtpd_client_event_limit_exceptions | $mynetworks                | $mynetworks    | 接続カウントや接続速度、SMTP 要求速度の制限から除外されるクライアント

  4. stress パラメータについて

     Postfix 2.5 以降でサポートされた、過負荷に対する機能
     プロセス数の上限 (default_process_limit) に達した場合に、各パラメータの値を変更することが可能

     # ps -ef | grep postfix
      postfix  3614  3597   0   20:48:26 ?           0:00 smtpd -n smtp -t inet -u -o stress=
      postfix  3616  3597   0   20:48:28 ?           0:00 smtpd -n smtp -t inet -u -o stress=yes   ← 上限値に達した場合 "yes" が付与される

     パラメータ名                   | デフォルト値                | 補足
     -------------------------------+-----------------------------+------------------------------------------------
     address_verify_poll_count      | ${stress?1}${stress:3}      | 送信先アドレス検証 verify に問い合わせる回数
     postscreen_command_time_limit  | ${stress?10}${stress:300}s  | postscreen 機能利用時に SMTP クライアントからの要求を受け取るまでの 待機時間
     postscreen_greet_wait          | ${stress?2}${stress:6}s     | postscreen 機能利用時に Greeting Mesaage を出すまで時間
     smtpd_hard_error_limit         | ${stress?1}${stress:20}     | SMTP クライアントのエラー (メール配送失敗に至らないもの) 数の最大
     smtpd_junk_command_limit       | ${stress?1}${stress:100}    | SMTP クライアントが実行できるジャンクコマンド (NOOP、VRFY、ETRN、RET 等) 数の最大
     smtpd_per_record_deadline      | ${stress?yes}${stress:no}   | yes の場合、各処理が途中であっても smtpd_timeout の値を超えた場合、接続を切断する
     smtpd_starttls_timeout         | ${stress?10}${stress:300}s  | SMTP クライアントからの要求を受け取るまでの 待機時間 (STARTTLS 以降)
     smtpd_timeout                  | ${stress?10}${stress:300}s  | SMTP クライアントからの要求を受け取るまでの 待機時間

  5. Postscreen

     Postfix 2.8 以降でサポートされた簡単な Tarpitting 機能
     S25R + taRgrey を使うので、覚える必要はないが、Postfix 自体の進化は評価できるかも
     
     1. /etc/postfix/main.cf (抜粋)

        ## Postscreen
        postscreen_access_list = permit_mynetworks,
                                 hash:/etc/postfix/postscreen_access
        postscreen_blacklist_action= drop
        postscreen_greet_action = enforce
        postscreen_greet_wait = ${stress?2}${stress:31}s
        #postscreen_dnsbl_sites = all.rbl.jp=127.0.0.[2;4],
        #                        zen.spamhaus.org=127.0.0.[2..7;10;11]
        #postscreen_dnsbl_action = enforce

     2. /etc/postfix/postscreen_access

        #
        127.0.0.1               permit
        #
        192.168.1.0/24          reject

     3. /etc/postfix/master.cf (抜粋)

        ## Postscreen
        #smtp      inet  n       -       n       -       -       smtpd
        smtp      inet  n       -       n       -     1     postscreen
        smtpd     pass  -       -       n       -     -     smtpd
        dnsblog   unix  -       -       n       -     0     dnsblog
        tlsproxy  unix  -       -       n       -     0     tlsproxy

  6. インスタンスを複数起動

     参考 URL (過去のやり方) : Stray Penguin http://www.asahi-net.or.jp/~aa4t-nngk/postfix-tips.html

     Postfix-deux 
 
     1. 初期化
        
        # postmulti -e init

        /etc/postfix/main.cf に以下の行が追加される
        multi_instance_wrapper = ${command_directory}/postmulti -p --
        multi_instance_enable = yes

     2. mta グループに属する po-stfix-deux という名前のインスタンスを作成する

        # postmulti -I postfix-deux -G mta -e create
        # ln -s /usr/local/64/etc/postfix-deux /etc/postfix-deux

     3. /etc/postfix-deux/main.cf 重要箇所のみ抜粋

        ## Postfix-Multi
        master_service_disable =
        authorized_submit_users =
        multi_instance_group = mta
        multi_instance_name = postfix-deux
        syslog_facility = local5

     4. /etc/postfix-deux/master.cf 重要箇所のみ抜粋

        #smtp      inet  n       -       n       -       -       smtpd
        10025      inet  n       -       n       -       -       smtpd

     5. インスタンス Postfix-deux の起動

        # postmulti -i postfix-test -e enable
        # postmulti -i postfix-test -p start

     6. コマンド 例

        newaliases : postmulti -i postfix-deux -x newaliases
        postmap    : postmulti -i postfix-deux -x postmap
        mailq      : postmulti -i postfix-deux -x mailq

