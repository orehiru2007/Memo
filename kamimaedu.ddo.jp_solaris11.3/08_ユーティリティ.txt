kamimaedu.ddo.jp (VMware + Oracle Solaris 11.3 x86)

すべて /usr/local 以下にインストールすること
データやログは /var 以下に置くこと
ライブラリは出来るだけシェアードライブラリにする

※せっかくなんで、可能な限り 64bit 環境とします

1. nkf 2.1.3 64bit

   # tar zxvf nkf-2.1.4.tar.gz
   # cd nkf-2.1.4
   
   ※ Makefile を以下の通り編集
   # diff -U1 Makefile{.orig,}
   --- Makefile.orig       2016-01-20 17:37:16.129862472 +0900
   +++ Makefile    2016-01-20 17:37:36.961492101 +0900
   @@ -1,3 +1,3 @@
   -CC = cc
   -CFLAGS = -g -O2 -Wall -pedantic
   +CC = gcc
   +CFLAGS = -m64 -g -O2 -Wall -pedantic
    # CFLAGS = -O3

   # make
   # mkdir -p /usr/local/64/bin
   # cp nkf /usr/local/64/bin
   # mkdir -p /usr/local/man/man1
   # cp nkf.1 /usr/local/man/man1

2. tcsh 64bit

   # wget ftp://ftp.astron.com/pub/tcsh/tcsh-6.19.00.tar.gz
   # tar zxvf tcsh-6.19.00.tar.gz
   # cd tcsh-6.19.00
   # CFLAGS=-m64 \
   # ./configure --prefix=/usr/local/64
   # make
   # make install install.man

3. perl 

   1. 32bit
   # wget http://www.cpan.org/src/5.0/perl-5.22.1.tar.gz
   # tar zxvf perl-5.22.1.tar.gz
   # cd perl-5.22.1
   # ./Configure -de -Dcc=gcc -Doptimize=-O3 \
   > -Dldflags="-L/usr/local/lib -R/usr/local/lib -L/usr/local/gcc4/lib -R/usr/local/gcc4/lib" \
   > -Dusethreads \
   > -Dprefix=/usr/local
   # LD_RUN_PATH=/usr/local/lib make
   # LC_ALL=C make test
   # make install

   2. 64bit
   # wget http://www.cpan.org/src/5.0/perl-5.22.1.tar.gz
   # tar zxvf perl-5.22.1.tar.gz
   # cd perl-5.22.1
   # ./Configure -de -Dcc="gcc -m64" -Doptimize=-O3 \
   > -Dldflags="-L/usr/local/64/lib -R/usr/local/64/lib -L/usr/local/gcc4/lib/amd64 -R/usr/local/gcc4/lib/amd64" \
   > -Dusethreads \
   > -Dprefix=/usr/local/64 \
   > -Duse64bitint
   # LD_RUN_PATH=/usr/local/64/lib/amd64 make
   # LC_ALL=C make test
   # make install

3. DB

   1. 32bit
   ※/usr/local/binutils/bin を PATH から除外しておくこと
   # tar zxvf db-5.3.28.tar.gz
   # cd db-5.3.28/build_unix
   # CC=gcc \
   # LDFLAGS=-R/usr/local/lib \
   > ../dist/configure --prefix=/usr/local --enable-compat185 --enable-cxx --enable-java
   # make
   # make install

   2. 64bit
   ※/usr/local/binutils/bin を PATH から除外しておくこと
   # tar zxvf db-5.3.28.tar.gz
   # cd db-5.3.28/build_unix
   # CFLAGS=-m64 \
   > CC=gcc \
   > LDFLAGS="-L/usr/local/gcc4/lib/amd64/lib -R/usr/local/gcc4/lib/amd64/lib" \
   > ../dist/configure --prefix=/usr/local/64 --enable-compat185 --enable-cxx --enable-java
   # make
   # make install

5. vim (純正利用)

   # pkg install /editor/vim

6. libpcap (純正利用)

   # pkg install /system/library/libpcap

7. tcpdump (純正利用)

   # pkg install /diagnostic/tcpdump

8. sudo (純正利用)

   # pkg install /security/sudo

9. less (純正利用)

   # pkg install /text/less

10. jwhois

    # wget http://core.ring.gr.jp/pub/GNU/jwhois/jwhois-4.0.tar.gz
    # wget http://www.fukatani.org/~hi-lo/blog/archives/upload_data/jwhois-4.0-fix-ipv6socket.patch
    # tar zxvf jwhois-4.0.tar.gz
    # cd jwhois-4.0
    # gpatch -p1 < ../jwhois-4.0-fix-ipv6socket.patch
    # ./configure --prefix=/usr/local \
    > --without-libiconv-prefix --without-cache --enable-nls LIBS=-lnsl
    # make
    # make install

    http://cvs.savannah.gnu.org/viewvc/jwhois/jwhois/example/jwhois.conf から、最新の jwhois.conf をダウンロードし
    /usr/local/etc/jwhois.conf に配置すること

11. Python 32bit

    1. Readline
    # wget ftp://ftp.cwru.edu/pub/bash/readline-6.3.tar.gz
    # tar xvzfp readline-6.3.tar.gz
    # cd readline-6.3
    > ./configure --prefix=/usr/local
    # make
    # gmake install

    2. Python 2.7.9
    # wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz
    # tar zxvf Python-2.7.9.tgz
    # cd Python-2.7.9
    # ./configure --prefix=/usr/local --enable-universalsdk
    # make
    # make test
    # make install

12. Python 64bit

    1. Readline
    # wget ftp://ftp.cwru.edu/pub/bash/readline-6.3.tar.gz
    # tar xvzfls readline-6.3.tar.gz
    # cd readline-6.3
    > CFLAGS=-m64 \
    > CPPFLAGS=-m64 \
    > LDFLAGS=-m64 \
    # ./configure --prefix=/usr/local/64
    # make
    # make install

    2. Python 2.7.9
    # wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz
    # tar zxvf Python-2.7.9.tgz
    # cd Python-2.7.9
    # CC="gcc -m64" \
    > ./configure --prefix=/usr/local/64 --enable-universalsdk --with-universal-archs=64-bit
    # make
    # make test
    # make install

13. Nmap

    純正を利用

14. bash

    ※2014/9,10 に発生した、脆弱性 (ShellShock CVE-2014-6271) への対応

    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3.30.tar.gz
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-031
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-032
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-033
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-034
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-035
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-036
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-037
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-038
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-039
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-040
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-041
    # wget ftp://ftp.gnu.org/pub/gnu/bash/bash-4.3-patches/bash43-042
    # tar zxvf bash-4.3.30.tar.gz
    # cd bash-4.3.30
    # patch -p0 < ../bash43-031
    # patch -p0 < ../bash43-032
    # patch -p0 < ../bash43-033
    # patch -p0 < ../bash43-034
    # patch -p0 < ../bash43-035
    # patch -p0 < ../bash43-036
    # patch -p0 < ../bash43-037
    # patch -p0 < ../bash43-038
    # patch -p0 < ../bash43-039
    # patch -p0 < ../bash43-040
    # patch -p0 < ../bash43-041
    # patch -p0 < ../bash43-042
    # ./configure --prefix=/usr/local/
    # make
    # make install

    確認
    # env x='() { :;}; echo vulnerable' /usr/bin/bash -c "echo this is a test"
    vulnerable
    this is a test

    # env x='() { :;}; echo vulnerable' /usr/local/bin/bash -c "echo this is a test"
    this is a test

    入れ替え
    # cd /usr/bin
    # mv bash bash.old
    # chmod 444 bash.old
    # ln -s /usr/local/bin/bash ./



