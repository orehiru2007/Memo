kamimaedu.ddo.jp (VMware + Oracle Solaris 11.2 x86)

Postfix + Dovecot (SMTP-Auth) +  TLS

Postfix

1. sendmail の停止

   # svcadm disable sendmail
   # svcs -x sendmail
   svc:/network/smtp:sendmail (sendmail SMTP mail transfer agent)
    State: disabled since 2016年01月25日 11時52分12秒
   Reason: Disabled by an administrator.
      See: http://support.oracle.com/msg/SMF-8000-05
      See: sendmail(1M)
      See: /var/svc/log/network-smtp:sendmail.log
   Impact: This service is not running.

2. zlib 64bit (インストール済)

   # wget http://zlib.net/zlib-1.2.8.tar.gz
   # tar zxvf zlib-1.2.8.tar.gz
   # cd zlib-1.2.8
   # CFLAGS=-m64 ./configure --prefix=/usr/local/64
   # LD_RUN_PATH=/usr/local/64/lib make
   # make install
   # CFLAGS=-m64 ./configure --shared --prefix=/usr/local/64
   # LD_RUN_PATH=/usr/local/64/lib make
   # make install

3. PCRE 64bit

   # wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz
   # tar zxvf pcre-8.38.tar.gz
   # cd pcre-8.38
   # CFLAGS="-m64 -g" \
   > CXXFLAGS="-m64 -g" \
   > LDFLAGS="-L/usr/local/gcc4/lib/amd64/ -L/usr/local/64/lib/" \
   > ./configure --prefix=/usr/local/64 --enable-utf8 --enable-pcregrep-libz
   # make
   # make install

3. postfix 3 のインストール


   1. インストール

      # groupadd -g 68 postfix
      # groupadd -g 69 postdrop
      # useradd -u 68 -g 68 -d /etc/postfix postfix
      # wget http://linorg.usp.br/postfix/release/official/postfix-3.2.0.tar.gz
      # tar zxvf postfix-3.2.0.tar.gz
      # cd postfix-3.2.0
      # patch -p1 <../postfix-3.2.0-sleep.patch
      # make -f Makefile.init makefiles shared=yes dynamicmaps=yes shlib_directory=/usr/local/64/lib/postfix \
      > CC="gcc -m64" \
      > OPT='-O3 -pipe -s -march=native -mtune=native' \
      > DEBUG='' \
      > CCARGS='-fPIC \
      > -DDEF_CONFIG_DIR=\"/usr/local/64/etc/postfix\" \
      > -DDEF_COMMAND_DIR=\"/usr/local/64/sbin\" \
      > -DDEF_DAEMON_DIR=\"/usr/local/64/libexec/postfix\" \
      > -DDEF_DATA_DIR=\"/var/lib/postfix\" \
      > -DDEF_MAILQ_PATH=\"/usr/local/64/bin/mailq\" \
      > -DDEF_MANPAGE_DIR=\"/usr/local/man\" \
      > -DDEF_NEWALIAS_PATH=\"/usr/local/64/bin/newaliases\" \
      > -DDEF_QUEUE_DIR=\"/var/spool/postfix\" \
      > -DDEF_SENDMAIL_PATH=\"/usr/local/64/sbin/sendmail\" \
      > -DDEF_META_DIR=\"/usr/local/64/etc/postfix\" \
      > -DUSE_TLS \
      > -DUSE_SASL_AUTH \
      > -DUSE_CYRUS_SASL \
      > -DHAS_DB \
      > -DHAS_PCRE \
      > -DDEF_SERVER_SASL_TYPE=\"dovecot\" \
      > -I/usr/local/64/include/openssl/ -I/usr/local/64/include/sasl -I/usr/local/64/include' \
      > AUXLIBS="-L/usr/local/64/lib -R/usr/local/64/lib -lssl -lcrypto -lz -lm -lsasl2 -ldb -lpcre"
      # make

      # make install
      install_root      : /
      tempdir           : /usr/local/src/64/postfix/3.2.0/postfix-3.2.0
      config_directory  : /usr/local/64/etc/postfix
      command_directory : /usr/local/64/sbin
      daemon_directory  : /usr/local/64/libexec/postfix
      data_directory    : /var/lib/postfix
      html_directory    : no
      mail_owner        : postfix
      mailq_path        : /usr/local/64/bin/mailq
      manpage_directory : /usr/local/man
      newaliases_path   : /usr/local/64/bin/newaliases
      queue_directory   : /var/spool/postfix
      readme_directory  : no
      sendmail_path     : /usr/local/64/sbin/sendmail
      setgid_group      : postdrop
      shlib_directory   : /usr/local/64/lib/postfix
      meta_directory    : /usr/local/64/etc/postfix

      # cat postfix-3.2.0-sleep.patch
      --- postfix-3.2.0.orig/src/smtpd/smtpd_check.c  2017-02-06 05:55:35.000000000 +0900
      +++ postfix-3.2.0/src/smtpd/smtpd_check.c       2017-04-19 16:49:45.184474849 +0900
      @@ -216,6 +216,7 @@
       #include <valid_utf8_hostname.h>
       #include <midna_domain.h>
       #include <mynetworks.h>
      +#include <iostuff.h>
      
       /* DNS library. */
      
      @@ -4063,6 +4064,7 @@
           ARGV   *list;
           int     found;
           int     saved_recursion = state->recursion++;
      +    VSTRING *buf;
      
           if (msg_verbose)
              msg_info(">>> START %s RESTRICTIONS <<<", reply_class);
      @@ -4151,8 +4153,35 @@
                  if (cpp[1] == 0 || alldig(cpp[1]) == 0) {
                      msg_warn("restriction %s must be followed by number", SLEEP);
                      reject_server_error(state);
      -           } else
      -               sleep(atoi(*++cpp));
      +            } else {
      +                      /* sleep(atoi(*++cpp)); */
      +                      int sleep_time = atoi(*++cpp);
      +                      int i;
      +                      for ( i = 0; i < sleep_time; i++ ) {
      +                             /* sleep( 1 ); */
      +                            if ( ! read_wait(state->client->fd, 1) ) { /* read enabled */
      +                              int ch = VSTREAM_GETC(state->client);
      +                               if (vstream_feof(state->client) || vstream_ferror(state->client)) { /* lost connection */
      +                                    vstream_ungetc(state->client, ch);
      +                                    buf = vstring_alloc(100);
      +                                    vstring_sprintf(buf, "lost connection after %d sec", i);
      +                                    log_whatsup(state, "sleep", STR(buf));
      +                                    vstring_free(buf);
      +                                    status = SMTPD_CHECK_REJECT; /* finish immediately if lost connection */
      +                                    break;
      +                              }
      +                              else { /* pipelining */
      +                                    vstream_ungetc(state->client, ch);
      +                                    buf = vstring_alloc(100);
      +                                    vstring_sprintf(buf, "pipelining after %d sec", i);
      +                                    log_whatsup(state, "sleep", STR(buf));
      +                                    vstring_free(buf);
      +                                    sleep( sleep_time - i );
      +                                    break;
      +                              }
      +                            }
      +                      }
      +                    }
              } else if (strcasecmp(name, REJECT_PLAINTEXT_SESSION) == 0) {
                  status = reject_plaintext_session(state);
              }

   2. 起動スクリプト

      # cat /etc/init.d/postfix
      #!/bin/sh
      
      [ -x /usr/local/64/sbin/postfix ] || echo "Postfix not found."
      
      /usr/local/64/sbin/postfix "$@"

   3. 起動スクリプトのリンクの作成

      # chmod 755 /etc/init.d/postfix
      # ln /etc/init.d/postfix /etc/rc0.d/K36postfix
      # ln /etc/init.d/postfix /etc/rc1.d/K36postfix
      # ln /etc/init.d/postfix /etc/rcS.d/K36postfix
      # ln /etc/init.d/postfix /etc/rc2.d/S88postfix

Dovecot (SMTP-Auth)

1. /etc/postfix/master.cf (重要箇所のみ抜粋)

   # diff -u /etc/postfix/master.cf{.orig,}
   --- /etc/postfix/master.cf.orig 2013-08-20 22:36:59.372187580 +0900
   +++ /etc/postfix/master.cf      2013-08-27 21:35:31.524259733 +0900
   @@ -125,3 +125,5 @@
    #mailman   unix  -       n       n       -       -       pipe
    #  flags=FR user=list argv=/usr/lib/mailman/bin/postfix-to-mailman.py
    #  ${nexthop} ${user}
   +dovecot   unix  -       n       n       -       -       pipe
   +    flags=DRhu user=dovecot:dovecot argv=/usr/local/64/libexec/dovecot/dovecot-lda -d ${recipient}

2. /etc/postfix/main.cf (重要箇所のみ)

   # SMTP Auth Dovecot
   smtpd_tls_auth_only = yes
   broken_sasl_auth_clients = yes
   smtpd_sasl_auth_enable = yes
   smtpd_sasl_authenticated_header = no
   smtpd_sasl_security_options = noanonymous
   smtpd_sasl_type = dovecot
   smtpd_sasl_path = private/auth
   smtpd_sasl_local_domain = $myhostname
   
   # Dovecot LDA
   mailbox_command = /usr/local/64/libexec/dovecot/dovecot-lda

8. TIPS

   1. 3.0 での主な変更点

      1. append_dot_mydomain = yes

         append_dot_mydomain : "user@host" 形式から "user@host.$mydomain" 形式への書き換え実施

         デフォルト値が、"yes" から "no" に変更された

      2. chroot = y

         master.cf chroot のデフォルト値が "y" から "n" に変更された

      3. mynetworks_style = subnet

         デフォルト値が "subnet" から "host" に変更された

      4. relay_domains=$mydestination

         デフォルト値が "$mydestination" から カラ (指定なしに変更された)

      5. smtputf8_enable = no

         デフォルト値が "no" から "yes" に変更された

      6. 互換モード設定不備に対する警告

         http://www.postfix.org/COMPATIBILITY_README.html

         postfix: Postfix is running with backwards-compatible default settings
         postfix: See http://www.postfix.org/COMPATIBILITY_README.html for details
         postfix: To disable backwards compatibility use "postconf compatibility_level=2" and "postfix reload"

         compatibility_level がセットされていない or 設定値に問題あり を示す警告

   2. /etc/services の編集

      # diff -U1 /etc/services{.orig,}
      --- /etc/services.orig  2013-06-25 11:31:02.568626704 +0900
      +++ /etc/services       2013-06-25 11:31:29.520765291 +0900
      @@ -40,2 +40,3 @@
       ldap           389/udp                         # Lightweight Directory Access Protocol
      +smtps          465/tcp                         # SMTP over SSL (TLS)
       dhcpv6-client  546/udp         dhcpv6c         # DHCPv6 Client (RFC 3315)

   3. /etc/postfix/master.cf

      submission inet n       -       n       -       -       smtpd
        -o syslog_name=postfix/submission                                  : syslog レコードのプロセス名の前に付けられるメールシステムの名前 / submission
        -o smtpd_tls_security_level=encrypt                                : SMTP TLS セキュリティレベル / encrypt (TLS 暗号化強制)
        -o smtpd_sasl_auth_enable=yes                                      : SASL 認証 / yes (有効)
        -o smtpd_reject_unlisted_recipient=yes                             : 不明な送信先アドレスへの配送拒否 / yes (拒否する)
      #  -o smtpd_client_restrictions=$mua_client_restrictions             : 詳細不明
      #  -o smtpd_helo_restrictions=$mua_helo_restrictions                 : 詳細不明
      #  -o smtpd_sender_restrictions=$mua_sender_restrictions             : 詳細不明
        -o smtpd_recipient_restrictions=permit_sasl_authenticated,reject   : RCPT TO コマンドに適用されるアクセス制限 / permit_sasl_authenticated,reject
      #  -o milter_macro_daemon_name=ORIGINATING                           : 詳細不明 (Postfix 2.3 から Milter が利用可能のため、その関連)
      smtps     inet  n       -       n       -       -       smtpd
        -o syslog_name=postfix/smtps                                       : syslog レコードのプロセス名の前に付けられるメールシステムの名前 / smtps
        -o smtpd_tls_wrappermode=yes                                       : サーバが常に TLS を使う、非標準 "ラッパー" モードの指定 / yes (有効)
        -o smtpd_sasl_auth_enable=yes                                      : SASL 認証 / yes (有効)
        -o smtpd_reject_unlisted_recipient=yes                             : 不明な送信先アドレスへの配送拒否 / yes (拒否する)
      #  -o smtpd_client_restrictions=$mua_client_restrictions             : 詳細不明
      #  -o smtpd_helo_restrictions=$mua_helo_restrictions                 : 詳細不明
      #  -o smtpd_sender_restrictions=$mua_sender_restrictions             : 詳細不明
        -o smtpd_recipient_restrictions=permit_sasl_authenticated,reject   : RCPT TO コマンドに適用されるアクセス制限 / permit_sasl_authenticated,reject
        -o milter_macro_daemon_name=ORIGINATING                            : 詳細不明 (Postfix 2.3 から Milter が利用可能のため、その関連)

  4. Postfix リソースチューニング

     パラメータ名                        | デフォルト値               | チューニング後 | 補足
     ------------------------------------+----------------------------+----------------+----------------------------------------------
     anvil_rate_time_unit                | 60s                        | 60s            | 単位時間
     default_process_limit               | 100                        | 300            | 子プロセスの 最大数
     smtpd_recipient_limit               | 1000                       | 1000           | 配送処理毎の 送信先アドレスの最大
     smtpd_timeout                       | ${stress?10}${stress:300}s | 300s           | SMTP クライアントからの要求を受け取るまでの 待機時間
     smtpd_client_connection_count_limit | 50                         | 50             | 単一の SMTP クライアントからの 同時最大接続数
     smtpd_client_message_rate_limit     | 0                          | 120            | 単位時間における  単一の SMTP クライアントからの配送要求数の最大
     smtpd_client_recipient_rate_limit   | 0                          |                | 単位時間における  単一の SMTP クライアントからの送信先アドレスの最大
     smtpd_client_connection_rate_limit  | 0                          |                | 単位時間における  単一の SMTP クライアントからの接続試行回数の最大
     smtpd_client_event_limit_exceptions | $mynetworks                | $mynetworks    | 接続カウントや接続速度、SMTP 要求速度の制限から除外されるクライアント

  5. stress パラメータについて

     Postfix 2.5 以降でサポートされた、過負荷に対する機能
     プロセス数の上限 (default_process_limit) に達した場合に、各パラメータの値を変更することが可能

     # ps -ef | grep postfix
      postfix  3614  3597   0   20:48:26 ?           0:00 smtpd -n smtp -t inet -u -o stress=
      postfix  3616  3597   0   20:48:28 ?           0:00 smtpd -n smtp -t inet -u -o stress=yes   ← 上限値に達した場合 "yes" が付与される

     パラメータ名                   | デフォルト値                | 補足
     -------------------------------+-----------------------------+------------------------------------------------
     address_verify_poll_count      | ${stress?1}${stress:3}      | 送信先アドレス検証 verify に問い合わせる回数
     postscreen_command_time_limit  | ${stress?10}${stress:300}s  | postscreen 機能利用時に SMTP クライアントからの要求を受け取るまでの 待機時間
     postscreen_greet_wait          | ${stress?2}${stress:6}s     | postscreen 機能利用時に Greeting Mesaage を出すまで時間
     smtpd_hard_error_limit         | ${stress?1}${stress:20}     | SMTP クライアントのエラー (メール配送失敗に至らないもの) 数の最大
     smtpd_junk_command_limit       | ${stress?1}${stress:100}    | SMTP クライアントが実行できるジャンクコマンド (NOOP、VRFY、ETRN、RET 等) 数の最大
     smtpd_per_record_deadline      | ${stress?yes}${stress:no}   | yes の場合、各処理が途中であっても smtpd_timeout の値を超えた場合、接続を切断する
     smtpd_starttls_timeout         | ${stress?10}${stress:300}s  | SMTP クライアントからの要求を受け取るまでの 待機時間 (STARTTLS 以降)
     smtpd_timeout                  | ${stress?10}${stress:300}s  | SMTP クライアントからの要求を受け取るまでの 待機時間

  6. Postscreen

     Postfix 2.8 以降でサポートされた簡単な Tarpitting 機能
     S25R + taRgrey を使うので、覚える必要はないが、Postfix 自体の進化は評価できるかも
     
     1. /etc/postfix/main.cf (抜粋)

        ## Postscreen
        postscreen_access_list = permit_mynetworks,
                                 hash:/etc/postfix/postscreen_access
        postscreen_blacklist_action= drop
        postscreen_greet_action = enforce
        postscreen_greet_wait = ${stress?2}${stress:31}s
        #postscreen_dnsbl_sites = all.rbl.jp=127.0.0.[2;4],
        #                        zen.spamhaus.org=127.0.0.[2..7;10;11]
        #postscreen_dnsbl_action = enforce

     2. /etc/postfix/postscreen_access

        #
        127.0.0.1               permit
        #
        192.168.1.0/24          reject

     3. /etc/postfix/master.cf (抜粋)

        ## Postscreen
        #smtp      inet  n       -       n       -       -       smtpd
        smtp      inet  n       -       n       -     1     postscreen
        smtpd     pass  -       -       n       -     -     smtpd
        dnsblog   unix  -       -       n       -     0     dnsblog
        tlsproxy  unix  -       -       n       -     0     tlsproxy

  7. インスタンスを複数起動

     参考 URL (過去のやり方) : Stray Penguin http://www.asahi-net.or.jp/~aa4t-nngk/postfix-tips.html

     Postfix-deux 
 
     1. 初期化
        
        # postmulti -e init

        /etc/postfix/main.cf に以下の行が追加される
        multi_instance_wrapper = ${command_directory}/postmulti -p --
        multi_instance_enable = yes

     2. mta グループに属する po-stfix-deux という名前のインスタンスを作成する

        # postmulti -I postfix-deux -G mta -e create
        # ln -s /usr/local/64/etc/postfix-deux /etc/postfix-deux

     3. /etc/postfix-deux/main.cf 重要箇所のみ抜粋

        ## Dovecot LDA
        mailbox_command = /usr/local/64/libexec/dovecot/dovecot-lda

        ## Alias
        alias_database = hash:/etc/postfix-deux/aliases
        alias_maps = hash:/etc/postfix-deux/aliases

        ## Postfix-Multi
        authorized_submit_users =
        master_service_disable =
        multi_instance_group = mta
        multi_instance_name = postfix-deux
        syslog_facility = local5
        multi_instance_enable = yes

     4. /etc/postfix-deux/master.cf 重要箇所のみ抜粋

        #smtp      inet  n       -       n       -       -       smtpd
        10025      inet  n       -       n       -       -       smtpd

        dovecot   unix  -       n       n       -       -       pipe
            flags=DRhu user=dovecot:dovecot argv=/usr/local/64/libexec/dovecot/dovecot-lda -d ${recipient}

     5. インスタンス Postfix-deux の起動

        # postmulti -i postfix-test -e enable
        # postmulti -i postfix-test -p start

     6. コマンド 例

        newaliases : postmulti -i postfix-deux -x newaliases
        postmap    : postmulti -i postfix-deux -x postmap
        mailq      : postmulti -i postfix-deux -x mailq

  8. SPF-Python

     1. python DNS

        # wget http://pypi.python.org/packages/source/p/pydns/pydns-2.3.6.tar.gz
        # tar zxvf pydns-2.3.6.tar.gz
        # cd pydns-2.3.6
        # python setup.py install

     2. python pyspf

        # wget http://pypi.python.org/packages/source/p/pyspf/pyspf-2.0.7.tar.gz
        # tar zxvf pyspf-2.0.7.tar.gz
        # cd pyspf-2.0.7
        # python setup.py install

     3. python pypolicyd-spf

        # wget https://launchpad.net/pypolicyd-spf/1.1/1.1/+download/pypolicyd-spf-1.1.tar.gz
        # tar xfz pypolicyd-spf-1.1.tar.gz
        # cd pypolicyd-spf-1.1
        # python setup.py install
        # mv /etc/python-policyd-spf/policyd-spf.conf /etc/python-policyd-spf/policyd-spf.conf.orig
        # cp /usr/local/src/pypolicyd-spf-1.1/policyd-spf.conf.commented /etc/python-policyd-spf/policyd-spf.conf

     4. /etc/python-policyd-spf/policyd-spf.conf

        # egrep -v "(^#|^$)" /etc/python-policyd-spf/policyd-spf.conf
debugLevel = 1
defaultSeedOnly = 1
HELO_reject = Fail
Mail_From_reject =  Fail
PermError_reject = False
TempError_Defer = False
skip_addresses = 127.0.0.0/8,::ffff:127.0.0.0//104,::1//128

     5. /etc/postfix/master.cf

        policy-spf  unix  -       n       n       -       0       spawn
          user=nobody argv=/usr/local/64/bin/python /usr/local/64/bin/policyd-spf /etc/python-policyd-spf/policyd-spf.conf

     6. /etc/postfix/main.cf

        smtpd_client_restrictions =
                permit_sasl_authenticated,
                permit_mynetworks,
                check_policy_service unix:private/policy-spf,
                check_client_access hash:/etc/postfix/smtpd_client_restrictions_access,
                permit
        policy-spf_time_limit = 3600s

  8. キューの保持期間

     1. 送信失敗

        deferred に入る

     2. queue_run_delay 毎に deferred をチェック

        minimal_backoff_time を超えるメールがあれば再送
        2 度目の失敗時は minimal_backoff_time の 2 倍 の時間後に再送
        3 度目の失敗時は minimal_backoff_time の 4 倍 の時間後に再送

     3. maximal_backoff_time を超えるまで再送を試行

        maximal_backoff_time を超えた場合は maximal_backoff_time の間隔で再送

     4. maximal_queue_lifetime を超えた場合は再送を諦める

     5. bounce_queue_lifetime を超えたら送信元にエラーメールを送信

     7. main.cf 抜粋

        queue_run_delay = 120s
        minimal_backoff_time = 300s
        maximal_backoff_time = 600s
        maximal_queue_lifetime = 2d
        bounce_queue_lifetime = 2d

     8. qshape

        # cp /usr/local/src/64/postfix/3.1.1/postfix-3.1.1/auxiliary/qshape/qshape.pl /usr/local/sbin/
        # chown 755 /usr/local/sbin/qshape.pl

        # /usr/local/sbin/qshape.pl deferred | head
                                         T  5 10 20 40 80 160 320 640 1280 1280+
                                  TOTAL  0  0  0  0  0  0   0   0   0    0     0
